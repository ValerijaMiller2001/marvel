{"version":3,"file":"static/js/734.ac01f22d.chunk.js","mappings":"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","sources":["components/app-banner/app-banner.js","components/error-message/error-message.js","components/comics-list/comics-list.js","components/pages/comics-page.js","hooks/http.hook.js","services/marvel-service.js"],"sourcesContent":["import './app-banner.scss';\r\nimport avengers from '../../resources/img/avengers.png';\r\nimport avengersLogo from '../../resources/img/avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"banner\">\r\n            <div className=\"banner_wrapper\">\r\n                <img src={avengers} alt=\"avengers\" className=\"banner_img\" />\r\n                <div className=\"banner_title\">\r\n                    New comics every week!\r\n                    <br />\r\n                    Stay tuned!\r\n                </div>\r\n                <img src={avengersLogo} alt=\"avengers logo\" className=\"banner_img\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import errorGif from './error.gif';\r\nimport './error-message.scss';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={errorGif} alt=\"error\" className='error' />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useMarvelService from '../../services/marvel-service';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../error-message/error-message';\r\nimport './comics-list.scss';\r\n\r\nconst setContent = (process, Component, newItemLoading ) => {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Spinner/>;\r\n        case 'loading':\r\n            return newItemLoading ? <Component/> : <Spinner/>;\r\n        case 'confirmed':\r\n            return <Component/>;\r\n        case 'error':\r\n            return <ErrorMessage/>\r\n        default: \r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nconst ComicsList = (props) => {\r\n    const [comicList, setComicList] = useState([]);\r\n\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(0);\r\n    const [comicEnded, setComicEnded] = useState(false);\r\n\r\n    const {getAllComics, process, setProcess} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicListLoaded)\r\n            .then(() => setProcess('confirmed'))\r\n    }\r\n\r\n    const onComicListLoaded = (newComicList) => {\r\n        let ended = false;\r\n        if (newComicList.lenght < 8) {\r\n            ended = true\r\n        }\r\n\r\n        setComicList(comicList => [...comicList, ...newComicList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset => offset + 8);\r\n        setComicEnded(ended);\r\n    }\r\n\r\n    function renderItems(arr) {\r\n        const items = arr.map((item, i) => {\r\n            return (\r\n                <li className=\"comicslist_item\" key={i}>\r\n                    <Link to={`/comics/${item.id}`}>\r\n                        <img src={item.thumbnail} alt={item.title} className=\"comicslist_img\" />\r\n                        <div className=\"comicslist_title\">{item.title}</div>\r\n                        <div className=\"comicslist_subtitle\">{item.price}</div>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"comicslist_wrapper\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"comicslist\">\r\n            {setContent(process, () => renderItems(comicList), newItemLoading)}\r\n\r\n            <button \r\n                className='btn btn_long' \r\n                disabled={newItemLoading}\r\n                style={{'display': comicEnded ? 'none' : 'block'}}\r\n                onClick={() => onRequest(offset)}>\r\n                    LOAD MORE\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import {Helmet} from \"react-helmet\";\r\nimport ComicsList from \"../comics-list/comics-list\";\r\nimport AppBanner from '../app-banner/app-banner';\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'appliccatio/json'}) => {\r\n\r\n        setProcess('loading');\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess('loading');\r\n    }, []);\r\n    return {request, clearError, process, setProcess};\r\n}","//Запросы к серверу\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n\r\n\r\n\r\nconst useMarvelService = () => {\r\n    const {request, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=d8d46a206e1d29c225cfc50d92cea400';\r\n    const _baseOffset = 210;\r\n\r\n\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            descriptionAll: char.description ? char.description : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            description: comic.description || 'There is no description',\r\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n            price: comic.prices[0].price ? `${comic.prices[0].price}$` : 'not available',\r\n            pageCount: comic.pageCount ? `${comic.pageCount} p.` : 'No information about the number of pages',\r\n            language: comic.textObjects[0]?.language || \"en-us\",\r\n        }\r\n    }\r\n\r\n    return {getAllCharacters, getCharacter, clearError, getAllComics, getComic, getCharacterByName, process, setProcess};\r\n}\r\n\r\nexport default useMarvelService;"],"names":["AppBanner","_jsx","className","children","_jsxs","src","avengers","alt","avengersLogo","ErrorMessage","errorGif","setContent","process","Component","newItemLoading","Spinner","Error","props","comicList","setComicList","useState","setNewItemLoading","offset","setOffset","comicEnded","setComicEnded","getAllComics","setProcess","useMarvelService","useEffect","onRequest","initial","then","onComicListLoaded","newComicList","ended","lenght","arr","items","map","item","i","Link","to","concat","id","thumbnail","title","price","renderItems","disabled","style","onClick","ComicsPage","_Fragment","Helmet","name","content","ComicsList","request","clearError","useHttp","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","status","json","e","_apiBase","_apiKey","_transformCharacter","char","description","slice","descriptionAll","path","extension","homepage","urls","wiki","comics","_transformComics","comic","_comic$textObjects$","prices","pageCount","language","textObjects","getAllCharacters","data","results","getCharacter","res","getComic","getCharacterByName"],"sourceRoot":""}